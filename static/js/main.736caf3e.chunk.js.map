{"version":3,"sources":["components/form/Address.jsx","components/form/Confirmation.jsx","contexts/FormValidation.js","hooks/useValidations.js","components/form/Login.jsx","components/form/PersonalData.jsx","components/form/RegistrationForm.jsx","models/validations.js","App.js","index.js"],"names":["Address","_ref","sendForm","_useState","useState","_useState2","Object","slicedToArray","proprieties","setProprieties","react_default","a","createElement","onSubmit","e","preventDefault","TextField","onChange","street","target","value","objectSpread","type","id","label","variant","margin","fullWidth","houseNumber","additionalInfo","zipcode","className","Confirmation","fullData","propNames","keys","map","element","index","key","shadowPass","i","length","itemValue","onClick","withoutValidation","valid","text","FormValidations","React","createContext","name","surname","pwd","idNumber","useValidations","validations","initialState","inicialState","item","setInitialState","errors","setErrors","_e$target","newState","Login","useContext","_useValidations","_useValidations2","validateField","canSend","email","required","password","onBlur","error","helperText","pwdConfirm","PersonalData","_useState3","_useState4","setIdNumber","_useState5","_useState6","checkedPromo","setCheckedPromo","_useState7","_useState8","checkedNews","setCheckedNews","substr","FormControlLabel","control","Switch","checked","event","RegistrationForm","completeForm","currentStep","setCurrentStep","data","setData","nextStep","dataCollection","newData","useEffect","formStepsArray","form_Login","form_PersonalData","form_Address","form_Confirmation","Typography","component","align","Fragment","Stepper","activeStep","Step","StepLabel","validateIdNumber","validateName","arrayForbidenChars","split","forEach","indexOf","validateSurname","test","validatePwd","revalidatePwd","sendToDB","console","log","App","Container","maxWidth","FormValidation","Provider","form_RegistrationForm","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"4QAgEeA,MA7Df,SAAAC,GAA6B,IAAXC,EAAWD,EAAXC,SAAWC,EACWC,mBAAS,IADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBK,EADoBH,EAAA,GACPI,EADOJ,EAAA,GAG3B,OACEK,EAAAC,EAAAC,cAAA,QAAMC,SAAU,SAACC,GACfA,EAAEC,iBACFb,EAASM,KAETE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAII,EAASJ,EAAEK,OAAOC,MACtBX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAIE,EAAL,CAAkBU,aAElCI,KAAK,OACLC,GAAG,SACHC,MAAM,SACNC,QAAQ,WACRC,OAAO,QACPC,WAAS,IAEXjB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAIc,EAAcd,EAAEK,OAAOC,MAC3BX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAIE,EAAL,CAAkBoB,kBAElCN,KAAK,SACLC,GAAG,cACHC,MAAM,SACNC,QAAQ,WACRC,OAAO,QACPC,WAAS,IAEXjB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAIe,EAAiBf,EAAEK,OAAOC,MAC9BX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAIE,EAAL,CAAkBqB,qBAElCP,KAAK,OACLC,GAAG,iBACHC,MAAM,kBACNC,QAAQ,WACRC,OAAO,QACPC,WAAS,IAEXjB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAIgB,EAAUhB,EAAEK,OAAOC,MACvBX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAIE,EAAL,CAAkBsB,cAElCR,KAAK,SACLC,GAAG,UACHC,MAAM,UACNC,QAAQ,WACRC,OAAO,QACPC,WAAS,IAEXjB,EAAAC,EAAAC,cAAA,UAAQmB,UAAU,eAAlB,YCrBSC,MApCf,SAAA/B,GAA8C,IAAtBgC,EAAsBhC,EAAtBgC,SAAU/B,EAAYD,EAAZC,SAC1BgC,EAAY5B,OAAO6B,KAAKF,GAE9B,OACEvB,EAAAC,EAAAC,cAAA,MAAImB,UAAU,qBACXG,EAAUE,IAAI,SAACC,EAASC,GAavB,OACE5B,EAAAC,EAAAC,cAAA,MAAI2B,IAAKD,GACP5B,EAAAC,EAAAC,cAAA,UAAKyB,GACL3B,EAAAC,EAAAC,cAAA,SAfY,WACd,GAAe,aAAZyB,GAAsC,eAAZA,EAAyB,CAGpD,IAFA,IACIG,EAAa,GACTC,EAFWR,EAASI,GAASK,OAEbD,EAAI,EAAGA,IAC7BD,GAAc,IAEhB,OAAOA,EAEP,OAAOP,EAASI,GAMZM,OAIVjC,EAAAC,EAAAC,cAAA,UACEgC,QAAS,WACP1C,MAFJ,cClBN,SAAS2C,IACP,MAAO,CAACC,OAAO,EAAMC,KAAK,IAGbC,MAXSC,IAAMC,cAAc,CAC1CC,KAAMN,EACNO,QAASP,EACTQ,IAAKR,EACLS,SAAUT,IC2BGU,MA/Bf,SAAyBC,GACvB,IAAMC,EAsBR,SAAyBD,GACvB,IAAME,EAAe,GACrB,IAAI,IAAIC,KAAQH,EACdE,EAAaC,GAAQ,CAAEb,OAAO,EAAMC,KAAM,IAE5C,OAAOW,EA3BcE,CAAgBJ,GADDrD,EAGRC,mBAASqD,GAHDpD,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAG7B0D,EAH6BxD,EAAA,GAGrByD,EAHqBzD,EAAA,GAoBpC,MAAO,CAACwD,EAfR,SAAwB/C,GAAE,IAAAiD,EACFjD,EAAEK,OAAjBgC,EADiBY,EACjBZ,KAAM/B,EADW2C,EACX3C,MACP4C,EAAQ1D,OAAAe,EAAA,EAAAf,CAAA,GAAQuD,GACtBG,EAASb,GAAQK,EAAYL,GAAM/B,GACnC0C,EAAUE,IAEZ,WACE,IAAI,IAAIL,KAAQE,EACd,IAAIA,EAAOF,GAAMb,MACf,OAAO,EAGX,OAAO,KCqDImB,MAnEf,SAAAhE,GAA6B,IAAZC,EAAYD,EAAZC,SAAYC,EACWC,mBAAS,IADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBK,EADoBH,EAAA,GACPI,EADOJ,EAAA,GAGrBmD,EAAcU,qBAAWlB,GAHJmB,EAIcZ,EAAeC,GAJ7BY,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAIpBN,EAJoBO,EAAA,GAIZC,EAJYD,EAAA,GAIGE,EAJHF,EAAA,GAM3B,OACE1D,EAAAC,EAAAC,cAAA,QACEC,SAAU,SAACC,GACTA,EAAEC,iBACEuD,KACFpE,EAASM,KAIbE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAIyD,EAAQzD,EAAEK,OAAOC,MACrBX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAKE,EAAN,CAAmB+D,YAEnCjD,KAAK,QACLC,GAAG,QACHC,MAAM,QACNC,QAAQ,WACRC,OAAO,QACPC,WAAS,EACT6C,UAAQ,IAEV9D,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAI2D,EAAW3D,EAAEK,OAAOC,MACxBX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAKE,EAAN,CAAmBiE,eAEnCC,OAAQL,EACRM,OAAQd,EAAOR,IAAIP,MACnB8B,WAAYf,EAAOR,IAAIN,KACvBzB,KAAK,WACLC,GAAG,MACH4B,KAAK,MACL3B,MAAM,WACNC,QAAQ,WACRC,OAAO,QACPC,WAAS,EACT6C,UAAQ,IAEV9D,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAI+D,EAAa/D,EAAEK,OAAOC,MAC1BX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAKE,EAAN,CAAmBqE,iBAEnCH,OAAQL,EACRM,OAAQd,EAAOgB,WAAW/B,MAC1B8B,WAAYf,EAAOgB,WAAW9B,KAC9BzB,KAAK,WACLC,GAAG,aACH4B,KAAK,aACL3B,MAAM,mBACNC,QAAQ,WACRC,OAAO,QACPC,WAAS,EACT6C,UAAQ,IAEV9D,EAAAC,EAAAC,cAAA,UAAQmB,UAAU,eAAlB,4BCqDS+C,MAnHf,SAAA7E,GAAoC,IAAZC,EAAYD,EAAZC,SAAYC,EACIC,mBAAS,IADbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3BK,EAD2BH,EAAA,GACdI,EADcJ,EAAA,GAAA0E,EAEF3E,mBAAS,IAFP4E,EAAA1E,OAAAC,EAAA,EAAAD,CAAAyE,EAAA,GAE3BzB,EAF2B0B,EAAA,GAEjBC,EAFiBD,EAAA,GAAAE,EAGM9E,oBAAS,GAHf+E,EAAA7E,OAAAC,EAAA,EAAAD,CAAA4E,EAAA,GAG3BE,EAH2BD,EAAA,GAGbE,EAHaF,EAAA,GAAAG,EAIIlF,oBAAS,GAJbmF,EAAAjF,OAAAC,EAAA,EAAAD,CAAAgF,EAAA,GAI3BE,EAJ2BD,EAAA,GAIdE,EAJcF,EAAA,GAM5B/B,EAAcU,qBAAWlB,GANGmB,EAOOZ,EAAeC,GAPtBY,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAO3BN,EAP2BO,EAAA,GAOnBC,EAPmBD,EAAA,GAOJE,EAPIF,EAAA,GASlC,OACE1D,EAAAC,EAAAC,cAAA,QACEC,SAAU,SAACC,GACTA,EAAEC,iBACEuD,KACFpE,EAASM,KAIbE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAIqC,EAAOrC,EAAEK,OAAOC,MACpBX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAKE,EAAN,CAAmB2C,WAEnCuB,OAAQL,EACRM,OAAQd,EAAOV,KAAKL,MACpB8B,WAAYf,EAAOV,KAAKJ,KACxBzB,KAAK,OACLC,GAAG,OACH4B,KAAK,OACL3B,MAAM,OACNC,QAAQ,WACRC,OAAO,QACP8C,UAAQ,EACR7C,WAAS,IAEXjB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,SAAU,SAACH,GACT,IAAIsC,EAAUtC,EAAEK,OAAOC,MACvBX,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAKE,EAAN,CAAmB4C,cAEnCsB,OAAQL,EACRM,OAAQd,EAAOT,QAAQN,MACvB8B,WAAYf,EAAOT,QAAQL,KAC3BzB,KAAK,OACLC,GAAG,UACH4B,KAAK,UACL3B,MAAM,UACNC,QAAQ,WACRC,OAAO,QACP8C,UAAQ,EACR7C,WAAS,IAEXjB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEI,MAAOkC,EACPrC,SAAU,SAACH,GACT,IAAIwC,EAAWxC,EAAEK,OAAOC,MACpBkC,EAASZ,QAAU,KACrBY,EAAWA,EAASoC,OAAO,EAAG,KAEhCT,EAAY3B,GACZ7C,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAKE,EAAN,CAAmB8C,eAEnCoB,OAAQL,EACRM,OAAQd,EAAOP,SAASR,MACxB8B,WAAYf,EAAOP,SAASP,KAC5BzB,KAAK,SACLC,GAAG,WACH4B,KAAK,WACL3B,MAAM,YACNC,QAAQ,WACRC,OAAO,QACP8C,UAAQ,EACR7C,WAAS,IAGXjB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,gBACbrB,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACEnE,MAAM,OACNJ,MAAOoE,EACPI,QACElF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACEC,QAASN,EACTvE,SAAU,SAAC8E,GACTN,EAAeM,EAAM5E,OAAO2E,UAE9B3C,KAAK,WAIXzC,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACEnE,MAAM,QACNJ,MAAOgE,EACPQ,QACElF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACEC,QAASV,EACTnE,SAAU,SAAC8E,GACTV,EAAgBU,EAAM5E,OAAO2E,UAE/B3C,KAAK,YAIXzC,EAAAC,EAAAC,cAAA,UACEmB,UAAU,cACVa,QAAS,WACPnC,EAAeH,OAAAe,EAAA,EAAAf,CAAA,GAAKE,EAAN,CAAmBgF,cAAaJ,oBAHlD,WChDOY,MApDf,SAAA/F,GAA0C,IAAfgG,EAAehG,EAAfgG,aAAe9F,EACFC,mBAAS,GADPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjC+F,EADiC7F,EAAA,GACpB8F,EADoB9F,EAAA,GAAA0E,EAEhB3E,mBAAS,IAFO4E,EAAA1E,OAAAC,EAAA,EAAAD,CAAAyE,EAAA,GAEjCqB,EAFiCpB,EAAA,GAE3BqB,EAF2BrB,EAAA,GAIlCsB,EAAW,WACfH,EAAeD,EAAc,IAGzBK,EAAiB,SAACC,GACtBH,EAAQ/F,OAAAe,EAAA,EAAAf,CAAA,GAAI8F,EAASI,IACrBF,KAEFG,oBAAU,WACLP,IAAgBQ,EAAehE,OAAO,GACvCuD,EAAaG,KAIjB,IAAMM,EAAiB,CACrBhG,EAAAC,EAAAC,cAAC+F,EAAD,CAAOzG,SAAUqG,IACjB7F,EAAAC,EAAAC,cAACgG,EAAD,CAAc1G,SAAUqG,IACxB7F,EAAAC,EAAAC,cAACiG,EAAD,CAAS3G,SAAUqG,IACnB7F,EAAAC,EAAAC,cAACkG,EAAD,CAAc7E,SAAUmE,EAAMlG,SAAUoG,IACxC5F,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAYhF,UAAU,sBAAsBN,QAAQ,KAAKuF,UAAU,KAAKC,MAAM,UAA9E,4CAKF,OACEvG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuG,SAAA,KACExG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAASpF,UAAU,UAAUqF,WAAYlB,GACvCxF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,eAEF5G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,kBAEF5G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,iBAEF5G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,iBAEF5G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,gBAGHZ,EAAeR,KCtDtB,SAASqB,EAAiBjE,GACxB,OAAwB,KAApBA,EAASZ,OACJ,CAAEI,OAAO,EAAOC,KAAM,iCAEtB,CAAED,OAAO,EAAMC,KAAM,IAIhC,SAASyE,EAAarE,GACpB,IACMsE,EADgB,6CACmBC,MAAM,IAC3C5E,GAAQ,EAOZ,OALA2E,EAAmBE,QAAQ,SAAC7G,IACD,IAArBqC,EAAKyE,QAAQ9G,KACfgC,GAAQ,KAGRK,EAAKT,OAAS,EACT,CAAEI,OAAO,EAAOC,KAAM,+BACpBD,EACF,CAAEA,OAAO,EAAOC,KAAM,uCAEtB,CAAED,OAAO,EAAMC,KAAM,IAIhC,SAAS8E,EAAgBzE,GAGvB,OAAIA,EAAQV,OAAS,EACZ,CAAEI,OAAO,EAAOC,KAAM,+BAHT,iDAIG+E,KAAK1E,GACrB,CAAEN,OAAO,EAAOC,KAAM,uCAEtB,CAAED,OAAO,EAAMC,KAAM,IAIhC,IAAI0B,EAAW,GACf,SAASsD,EAAY1E,GAGnB,OAAIA,EAAIX,OAAS,GAAKW,EAAIX,OAAS,GAC1B,CAAEI,OAAO,EAAOC,KAAM,sEAHV,sCAIG+E,KAAKzE,IAG3BoB,EAAWpB,EACJ,CAAEP,OAAO,EAAMC,KAAM,KAHrB,CAAED,OAAO,EAAOC,KAAM,sDAOjC,SAASiF,EAAenD,GACtB,OAAGA,IAAeJ,EACT,CAAE3B,OAAO,EAAOC,KAAM,sCAEtB,CAAED,OAAO,EAAMC,KAAM,ICvBhC,SAASkF,EAAS7B,GAChB8B,QAAQC,IAAI/B,GAGCgC,MAzBf,WACE,OACE1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAWrB,UAAU,UAAUsB,SAAS,MACtC5H,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAYhF,UAAU,QAAQN,QAAQ,KAAKuF,UAAU,MAArD,sBAGAtG,EAAAC,EAAAC,cAAC2H,EAAgBC,SAAjB,CACEpH,MAAO,CACL+B,KAAMqE,EACNpE,QAASyE,EACTxE,IAAK0E,EACLzE,SAAUiE,EACV1C,WAAYmD,IAGdtH,EAAAC,EAAAC,cAAC6H,EAAD,CAAkBxC,aAAcgC,OCxBxCS,IAASC,OACPjI,EAAAC,EAAAC,cAACF,EAAAC,EAAMiI,WAAP,KACElI,EAAAC,EAAAC,cAACiI,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.736caf3e.chunk.js","sourcesContent":["import { TextField } from \"@mui/material\";\nimport React, {useState} from \"react\";\n\nfunction Address({sendForm}) {\n  const [proprieties, setProprieties] = useState({})\n\n  return (\n    <form onSubmit={(e)=>{\n      e.preventDefault();\n      sendForm(proprieties);\n    }}>\n      <TextField\n        onChange={(e) => {\n          let street = e.target.value;\n          setProprieties({...proprieties, street});\n        }}\n        type=\"text\"\n        id=\"street\"\n        label=\"Street\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n      />\n      <TextField\n        onChange={(e) => {\n          let houseNumber = e.target.value;\n          setProprieties({...proprieties, houseNumber});\n        }}\n        type=\"number\"\n        id=\"houseNumber\"\n        label=\"Number\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n      />\n      <TextField\n        onChange={(e) => {\n          let additionalInfo = e.target.value;\n          setProprieties({...proprieties, additionalInfo});\n        }}\n        type=\"text\"\n        id=\"additionalInfo\"\n        label=\"Additional Info\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n      />\n      <TextField\n        onChange={(e) => {\n          let zipcode = e.target.value;\n          setProprieties({...proprieties, zipcode});\n        }}\n        type=\"number\"\n        id=\"zipcode\"\n        label=\"Zipcode\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n      />\n      <button className=\"button-next\">Finish</button>\n    </form>\n  );\n}\n\nexport default Address;\n","import React from \"react\";\n\nfunction Confirmation({ fullData, sendForm }) {\n  const propNames = Object.keys(fullData);\n\n  return (\n    <ul className=\"confirmation-list\">\n      {propNames.map((element, index) => {\n        let itemValue = () => {\n          if(element === \"password\" || element === \"pwdConfirm\"){\n            const passLength = fullData[element].length;\n            let shadowPass = \"\";\n            for(let i = passLength; i > 0; i--){\n              shadowPass += \"*\";\n            }\n            return shadowPass;\n          } else {\n            return fullData[element];\n          }\n        }\n        return (\n          <li key={index}>\n            <h4>{element}</h4>\n            <p>{itemValue()}</p>\n          </li>\n        );\n      })}\n      <button\n        onClick={() => {\n          sendForm();\n        }}\n      >\n        Complete\n      </button>\n    </ul>\n  );\n}\n\nexport default Confirmation;\n","import React from \"react\";\n\nconst FormValidations = React.createContext({\n  name: withoutValidation,\n  surname: withoutValidation,\n  pwd: withoutValidation,\n  idNumber: withoutValidation\n});\n\nfunction withoutValidation(){\n  return {valid: true, text:\"\"}\n}\n\nexport default FormValidations;\n","import { useState } from 'react';\n\nfunction useValidations (validations) {\n  const initialState = setInitialState(validations)\n\n  const [errors, setErrors] = useState(initialState)\n\n  function validateFields(e){\n    const {name, value} = e.target;\n    const newState = { ...errors }\n    newState[name] = validations[name](value);\n    setErrors(newState);\n  }\n  function canSend(){\n    for(let item in errors){\n      if(!errors[item].valid){\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return [errors, validateFields, canSend]\n\n}\nfunction setInitialState(validations){\n  const inicialState = {};\n  for(let item in validations){\n    inicialState[item] = { valid: true, text: \"\" }\n  }\n  return inicialState;\n}\n\nexport default useValidations;","import { TextField } from \"@mui/material\";\nimport React, { useState, useContext } from \"react\";\nimport FormValidations from \"../../contexts/FormValidation\";\nimport useValidations from \"../../hooks/useValidations\";\n\nfunction Login({ sendForm }) {\n  const [proprieties, setProprieties] = useState({});\n\n  const validations = useContext(FormValidations);\n  const [errors, validateField, canSend] = useValidations(validations);\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (canSend()) {\n          sendForm(proprieties);\n        }\n      }}\n    >\n      <TextField\n        onChange={(e) => {\n          let email = e.target.value;\n          setProprieties({ ...proprieties, email });\n        }}\n        type=\"email\"\n        id=\"email\"\n        label=\"Email\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        required\n      />\n      <TextField\n        onChange={(e) => {\n          let password = e.target.value;\n          setProprieties({ ...proprieties, password });\n        }}\n        onBlur={validateField}\n        error={!errors.pwd.valid}\n        helperText={errors.pwd.text}\n        type=\"password\"\n        id=\"pwd\"\n        name=\"pwd\"\n        label=\"Password\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        required\n      />\n      <TextField\n        onChange={(e) => {\n          let pwdConfirm = e.target.value;\n          setProprieties({ ...proprieties, pwdConfirm });\n        }}\n        onBlur={validateField}\n        error={!errors.pwdConfirm.valid}\n        helperText={errors.pwdConfirm.text}\n        type=\"password\"\n        id=\"pwdConfirm\"\n        name=\"pwdConfirm\"\n        label=\"Confirm Password\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        required\n      />\n      <button className=\"button-next\">Next</button>\n    </form>\n  );\n}\n\nexport default Login;\n","import { FormControlLabel, Switch, TextField } from \"@mui/material\";\nimport React, { useState, useContext } from \"react\";\nimport FormValidations from \"../../contexts/FormValidation\";\nimport useValidations from \"../../hooks/useValidations\";\n\nfunction PersonalData({ sendForm }) {\n  const [proprieties, setProprieties] = useState({});\n  const [idNumber, setIdNumber] = useState(\"\");\n  const [checkedPromo, setCheckedPromo] = useState(true);\n  const [checkedNews, setCheckedNews] = useState(true);\n\n  const validations = useContext(FormValidations);\n  const [errors, validateField, canSend] = useValidations(validations);\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (canSend()) {\n          sendForm(proprieties);\n        }\n      }}\n    >\n      <TextField\n        onChange={(e) => {\n          let name = e.target.value;\n          setProprieties({ ...proprieties, name });\n        }}\n        onBlur={validateField}\n        error={!errors.name.valid}\n        helperText={errors.name.text}\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        required\n        fullWidth\n      />\n      <TextField\n        onChange={(e) => {\n          let surname = e.target.value;\n          setProprieties({ ...proprieties, surname });\n        }}\n        onBlur={validateField}\n        error={!errors.surname.valid}\n        helperText={errors.surname.text}\n        type=\"text\"\n        id=\"surname\"\n        name=\"surname\"\n        label=\"Surname\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        required\n        fullWidth\n      />\n      <TextField\n        value={idNumber}\n        onChange={(e) => {\n          let idNumber = e.target.value;\n          if (idNumber.length >= 11) {\n            idNumber = idNumber.substr(0, 11);\n          }\n          setIdNumber(idNumber);\n          setProprieties({ ...proprieties, idNumber });\n        }}\n        onBlur={validateField}\n        error={!errors.idNumber.valid}\n        helperText={errors.idNumber.text}\n        type=\"number\"\n        id=\"idNumber\"\n        name=\"idNumber\"\n        label=\"ID Number\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        required\n        fullWidth\n      />\n\n      <div className=\"checkButtons\">\n        <FormControlLabel\n          label=\"News\"\n          value={checkedNews}\n          control={\n            <Switch\n              checked={checkedNews}\n              onChange={(event) => {\n                setCheckedNews(event.target.checked);\n              }}\n              name=\"news\"\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"Promo\"\n          value={checkedPromo}\n          control={\n            <Switch\n              checked={checkedPromo}\n              onChange={(event) => {\n                setCheckedPromo(event.target.checked);\n              }}\n              name=\"promo\"\n            />\n          }\n        />\n        <button\n          className=\"button-next\"\n          onClick={() => {\n            setProprieties({ ...proprieties, checkedNews, checkedPromo });\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default PersonalData;\n","import { Stepper, StepLabel, Step, Typography } from \"@mui/material\";\nimport React, {  useEffect, useState } from \"react\";\nimport Address from \"./Address\";\nimport Confirmation from \"./Confirmation\";\nimport Login from \"./Login\";\nimport PersonalData from \"./PersonalData\";\n\nfunction RegistrationForm({completeForm}) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [data, setData] = useState({});\n\n  const nextStep = () => {\n    setCurrentStep(currentStep + 1);\n  };\n\n  const dataCollection = (newData) => {\n    setData({...data, ...newData});\n    nextStep();\n  };\n  useEffect(()=>{\n    if(currentStep === formStepsArray.length-1){\n      completeForm(data);\n    }\n  });\n\n  const formStepsArray = [\n    <Login sendForm={dataCollection} />,\n    <PersonalData sendForm={dataCollection} />,\n    <Address sendForm={dataCollection} />,\n    <Confirmation fullData={data} sendForm={nextStep}/>,\n    <Typography className=\"form-completed_text\" variant=\"h5\" component=\"h1\" align=\"center\">\n      Your information was successfully sent!\n    </Typography>,\n  ];\n\n  return (\n    <>\n      <Stepper className=\"stepper\" activeStep={currentStep}>\n        <Step>\n          <StepLabel>Login</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>Personal</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>Address</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>Confirm</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>Done!</StepLabel>\n        </Step>\n      </Stepper>\n      {formStepsArray[currentStep]}\n    </>\n  );\n}\n\nexport default RegistrationForm;\n","function validateIdNumber(idNumber) {\n  if (idNumber.length !== 11) {\n    return { valid: false, text: \"Id number must have 11 digits\" };\n  } else {\n    return { valid: true, text: \"\" };\n  }\n}\n\nfunction validateName(name) {\n  const forbidenChars = \"1234567890!£$%&/()=?^@#ù+è-_^'.\\\"\";\n  const arrayForbidenChars = forbidenChars.split(\"\");\n  let valid = false;\n\n  arrayForbidenChars.forEach((e) => {\n    if (name.indexOf(e) !== -1){\n      valid = true;\n    }\n  });\n  if (name.length < 2) {\n    return { valid: false, text: \"Must have at least 2 chars.\" };\n  } else if (valid) {\n    return { valid: false, text: \"Can't use numbers or special chars.\" };\n  } else {\n    return { valid: true, text: \"\" };\n  }\n}\n\nfunction validateSurname(surname) {\n  const forbidenChars = /[ `!@#$%^&*()_+\\-=[\\]{};':\"|,.<>/?~1234567890]/;\n\n  if (surname.length < 2) {\n    return { valid: false, text: \"Must have at least 2 chars.\" };\n  } else if (forbidenChars.test(surname)) {\n    return { valid: false, text: \"Can't use numbers or special chars.\" };\n  } else {\n    return { valid: true, text: \"\" };\n  }\n}\n\nlet password = \"\";\nfunction validatePwd(pwd) {\n  const specialChars = /[`!@#$%^&*()_+\\-=[\\]{};':\"|,.<>/?~]/;\n\n  if (pwd.length < 4 || pwd.length > 64) {\n    return { valid: false, text: \"Password must contain at least 4 digits and no more than 64 digits\" };\n  } else if(!specialChars.test(pwd)){\n    return { valid: false, text: \"Password must contain at least 1 special character\" };\n  } else {\n    password = pwd;\n    return { valid: true, text: \"\" };\n  }\n}\n\nfunction revalidatePwd (pwdConfirm){\n  if(pwdConfirm !== password){\n    return { valid: false, text: \"Password is diferent, please retry\" };\n  } else {\n    return { valid: true, text: \"\" };\n  }\n}\n\n\nexport { validateIdNumber, validatePwd, revalidatePwd, validateName, validateSurname };","import { Container, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport \"./assets/App.css\";\nimport RegistrationForm from \"./components/form/RegistrationForm\";\nimport FormValidations from \"./contexts/FormValidation\";\nimport {\n  validateIdNumber,\n  validatePwd,\n  validateName,\n  validateSurname,\n  revalidatePwd,\n} from \"./models/validations\";\n\nfunction App() {\n  return (\n    <Container component=\"article\" maxWidth=\"sm\">\n      <Typography className=\"title\" variant=\"h4\" component=\"h1\">\n        Let's get started!\n      </Typography>\n      <FormValidations.Provider\n        value={{\n          name: validateName,\n          surname: validateSurname,\n          pwd: validatePwd,\n          idNumber: validateIdNumber,\n          pwdConfirm: revalidatePwd,\n        }}\n      >\n        <RegistrationForm completeForm={sendToDB} />\n      </FormValidations.Provider>\n    </Container>\n  );\n}\n\nfunction sendToDB(data) {\n  console.log(data);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}